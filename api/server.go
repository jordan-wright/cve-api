package main

import (
	"fmt"
	"net/http"

	"github.com/gorilla/mux"
)

type CVE struct {
}

func main() {
	r := mux.NewRouter()
	r.HandleFunc("/{year:[1-2][0-9]{3}}", CVEByYearHandler)
	r.HandleFunc("/{year:[1-2][0-9]{3}}/{id:[0-9]+}", CVEByIdHandler)
	r.NotFoundHandler = http.HandlerFunc(NotFoundHandler)
	http.Handle("/", r)
	http.ListenAndServe("127.0.0.1:3334", nil)
}

//CVEByYearHandler queries the database for all CVE's from a specific year and returns the details in JSON format.
func CVEByYearHandler(w http.ResponseWriter, r *http.Request) {
	year := mux.Vars(r)["year"]
	fmt.Fprintf(w, "Searching for CVE-%s-*", year)
}

//CVEByIdHandler queries the database for a specific CVE (CVE-XXXX-YYY...) and returns the details in JSON format.
func CVEByIdHandler(w http.ResponseWriter, r *http.Request) {
	year := mux.Vars(r)["year"]
	id := mux.Vars(r)["id"]
	fmt.Fprintf(w, "Searching for CVE-%s-%s", year, id)
}

//CVEByIdHandler queries the database for a specific CVE (CVE-XXXX-YYY...) and returns the details in JSON format.
func NotFoundHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "404 - Not Found")
}
